Œ
GD:\WebAPI\Employee_Async\Employee_Async\EmployeeCrud\Repository\Repo.cs
	namespace 	
EmployeeCrud
 
. 

Repository !
{ 
public 

class 

Repository 
< 
T 
> 
:  
IRepository! ,
<, -
T- .
>. /
where0 5
T6 7
:8 9
class: ?
{		 
private

 
readonly

 
AppDBContext

 %
_context

& .
;

. /
private 
readonly 
DbSet 
< 
T  
>  !
_dbSet" (
;( )
public 

Repository 
( 
AppDBContext &
context' .
). /
{ 	
_context 
= 
context 
; 
_dbSet 
= 
context 
. 
Set  
<  !
T! "
>" #
(# $
)$ %
;% &
} 	
public 
async 
Task 
< 
T 
> 
CreateAsync (
(( )
T) *
entity+ 1
)1 2
{ 	
await 
_dbSet 
. 
AddAsync !
(! "
entity" (
)( )
;) *
await 
_context 
. 
SaveChangesAsync +
(+ ,
), -
;- .
return 
entity 
; 
} 	
public 
async 
Task 
DeleteAsync %
(% &
int& )
id* ,
), -
{ 	
var 
entity 
= 
await 
_dbSet %
.% &
	FindAsync& /
(/ 0
id0 2
)2 3
;3 4
_dbSet 
. 
Remove 
( 
entity  
)  !
;! "
await 
_context 
. 
SaveChangesAsync +
(+ ,
), -
;- .
} 
public 
async 
Task 
< 
IEnumerable %
<% &
T& '
>' (
>( )
GetAllAsync* 5
(5 6
)6 7
{   	
return!! 
await!! 
_dbSet!! 
.!!  
ToListAsync!!  +
(!!+ ,
)!!, -
;!!- .
}"" 	
public$$ 
async$$ 
Task$$ 
<$$ 
T$$ 
>$$ 
GetByIdAsync$$ )
($$) *
int$$* -
id$$. 0
)$$0 1
{%% 	
return&& 
await&& 
_dbSet&& 
.&&  
	FindAsync&&  )
(&&) *
id&&* ,
)&&, -
;&&- .
}'' 	
public)) 
async)) 
Task)) 
UpdateAsync)) %
())% &
T))& '
entity))( .
))). /
{** 	
_context++ 
.++ 
Entry++ 
(++ 
entity++ !
)++! "
.++" #
State++# (
=++) *
EntityState+++ 6
.++6 7
Modified++7 ?
;++? @
await,, 
_context,, 
.,, 
SaveChangesAsync,, +
(,,+ ,
),,, -
;,,- .
}-- 	
}.. 
}00 Œ	
HD:\WebAPI\Employee_Async\Employee_Async\EmployeeCrud\Repository\IRepo.cs
	namespace 	
EmployeeCrud
 
. 

Repository !
{ 
public 

	interface 
IRepository  
<  !
T! "
>" #
where$ )
T* +
:, -
class. 3
{ 
Task 
< 
IEnumerable 
< 
T 
> 
> 
GetAllAsync (
(( )
)) *
;* +
Task 
< 
T 
> 
GetByIdAsync 
( 
int  
id! #
)# $
;$ %
Task		 
<		 
T		 
>		 
CreateAsync		 
(		 
T		 
entity		 $
)		$ %
;		% &
Task

 
UpdateAsync

 
(

 
T

 
entity

 !
)

! "
;

" #
Task 
DeleteAsync 
( 
int 
id 
)  
;  !
} 
} ²
?D:\WebAPI\Employee_Async\Employee_Async\EmployeeCrud\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddDbContext 
< 
AppDBContext *
>* +
(+ ,
options, 3
=>4 6
options 
. 
UseMySql 
( 
builder 
. 
Configuration *
.* +
GetConnectionString+ >
(> ?
$str? R
)R S
,S T
new		 
MySqlServerVersion		 
(		 
new		 "
Version		# *
(		* +
$num		+ ,
,		, -
$num		. /
,		/ 0
$num		1 3
)		3 4
)		4 5
)		5 6
)		6 7
;		7 8
builder

 
.

 
Services

 
.

 
	AddScoped

 
(

 
typeof

 !
(

! "
IRepository

" -
<

- .
>

. /
)

/ 0
,

0 1
typeof

2 8
(

8 9

Repository

9 C
<

C D
>

D E
)

E F
)

F G
;

G H
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder 
. 
Services 
. 
AddSwaggerGen 
( 
)  
;  !
var 
app 
= 	
builder
 
. 
Build 
( 
) 
; 
if 
( 
app 
. 
Environment 
. 
IsDevelopment !
(! "
)" #
)# $
{ 
app 
. 

UseSwagger 
( 
) 
; 
app 
. 
UseSwaggerUI 
( 
) 
; 
} 
app 
. 
UseHttpsRedirection 
( 
) 
; 
app 
. 
UseAuthorization 
( 
) 
; 
app   
.   
MapControllers   
(   
)   
;   
app"" 
."" 
Run"" 
("" 
)"" 	
;""	 
ð
FD:\WebAPI\Employee_Async\Employee_Async\EmployeeCrud\Model\Employee.cs
	namespace 	
EmployeeCrud
 
. 
Model 
{ 
public 

class 
Employee 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
Age 
{ 
get 
; 
set !
;! "
}# $
public 
DateTime 
DateofJoining %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
}		 
}

 ×
YD:\WebAPI\Employee_Async\Employee_Async\EmployeeCrud\Migrations\20250705040114_Initial.cs
	namespace 	
EmployeeCrud
 
. 

Migrations !
{ 
public

 

partial

 
class

 
Initial

  
:

! "
	Migration

# ,
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
AlterDatabase *
(* +
)+ ,
. 

Annotation 
( 
$str +
,+ ,
$str- 6
)6 7
;7 8
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str !
,! "
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ C
,C D(
MySqlValueGenerationStrategyE a
.a b
IdentityColumnb p
)p q
,q r
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 @
,@ A
nullableB J
:J K
falseL Q
)Q R
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @
Age 
= 
table 
.  
Column  &
<& '
int' *
>* +
(+ ,
type, 0
:0 1
$str2 7
,7 8
nullable9 A
:A B
falseC H
)H I
,I J
DateofJoining !
=" #
table$ )
.) *
Column* 0
<0 1
DateTime1 9
>9 :
(: ;
type; ?
:? @
$strA N
,N O
nullableP X
:X Y
falseZ _
)_ `
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 3
,3 4
x5 6
=>7 9
x: ;
.; <
Id< >
)> ?
;? @
}   
)   
.!! 

Annotation!! 
(!! 
$str!! +
,!!+ ,
$str!!- 6
)!!6 7
;!!7 8
}"" 	
	protected%% 
override%% 
void%% 
Down%%  $
(%%$ %
MigrationBuilder%%% 5
migrationBuilder%%6 F
)%%F G
{&& 	
migrationBuilder'' 
.'' 
	DropTable'' &
(''& '
name(( 
:(( 
$str(( !
)((! "
;((" #
})) 	
}** 
}++ ³
ID:\WebAPI\Employee_Async\Employee_Async\EmployeeCrud\Data\AppDBContext.cs
	namespace 	
EmployeeCrud
 
. 
Data 
{ 
public 

class 
AppDBContext 
: 
	DbContext  )
{ 
public 
AppDBContext 
( 
DbContextOptions ,
<, -
AppDBContext- 9
>9 :
options; B
)B C
:D E
baseF J
(J K
optionsK R
)R S
{T U
}V W
public 
DbSet 
< 
Employee 
> 
	Employees (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
}

 
}  %
VD:\WebAPI\Employee_Async\Employee_Async\EmployeeCrud\Controllers\EmployeeController.cs
	namespace 	
EmployeeCrud
 
. 

Controller !
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
EmployeeController #
:$ %
ControllerBase& 4
{ 
private 
readonly 
IRepository $
<$ %
Employee% -
>- .
_repository/ :
;: ;
public 
EmployeeController !
(! "
IRepository" -
<- .
Employee. 6
>6 7

repository8 B
)B C
{ 	
_repository 
= 

repository $
;$ %
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
IEnumerable' 2
<2 3
Employee3 ;
>; <
>< =
>= >
GetAll? E
(E F
)F G
{ 	
var 
	employees 
= 
await !
_repository" -
.- .
GetAllAsync. 9
(9 :
): ;
;; <
return 
Ok 
( 
	employees 
)  
;  !
} 	
[ 	
HttpGet	 
( 
$str 
) 
] 
public 
async 
Task 
< 
ActionResult &
<& '
Employee' /
>/ 0
>0 1
GetById2 9
(9 :
int: =
id> @
)@ A
{ 	
var 
employee 
= 
await  
_repository! ,
., -
GetByIdAsync- 9
(9 :
id: <
)< =
;= >
if   
(   
employee   
==   
null    
)    !
return  " (
NotFound  ) 1
(  1 2
)  2 3
;  3 4
return!! 
Ok!! 
(!! 
employee!! 
)!! 
;!!  
}"" 	
[$$ 	
HttpPost$$	 
]$$ 
public%% 
async%% 
Task%% 
<%% 
ActionResult%% &
<%%& '
Employee%%' /
>%%/ 0
>%%0 1
Create%%2 8
(%%8 9
Employee%%9 A
employee%%B J
)%%J K
{&& 	
var'' 
newEmployee'' 
='' 
await'' #
_repository''$ /
.''/ 0
CreateAsync''0 ;
(''; <
employee''< D
)''D E
;''E F
return(( 
CreatedAtAction(( "
(((" #
nameof((# )
((() *
GetById((* 1
)((1 2
,((2 3
new((4 7
{((8 9
id((: <
=((= >
newEmployee((? J
.((J K
Id((K M
}((N O
,((O P
newEmployee((Q \
)((\ ]
;((] ^
})) 	
[++ 	
HttpPut++	 
(++ 
$str++ 
)++ 
]++ 
public,, 
async,, 
Task,, 
<,, 
IActionResult,, '
>,,' (
Update,,) /
(,,/ 0
int,,0 3
id,,4 6
,,,6 7
Employee,,8 @
employee,,A I
),,I J
{-- 	
if.. 
(.. 
id.. 
!=.. 
employee.. 
... 
Id.. !
)..! "
return..# )

BadRequest..* 4
(..4 5
)..5 6
;..6 7
await// 
_repository// 
.// 
UpdateAsync// )
(//) *
employee//* 2
)//2 3
;//3 4
return00 
	NoContent00 
(00 
)00 
;00 
}11 	
[33 	

HttpDelete33	 
(33 
$str33 
)33 
]33 
public44 
async44 
Task44 
<44 
IActionResult44 '
>44' (
Delete44) /
(44/ 0
int440 3
id444 6
)446 7
{55 	
await66 
_repository66 
.66 
DeleteAsync66 )
(66) *
id66* ,
)66, -
;66- .
return77 
	NoContent77 
(77 
)77 
;77 
}88 	
}99 
}:: 